name: deploy

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        curl -sSL \
          "https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py" | python

    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        source "$HOME/.poetry/env"
        poetry config virtualenvs.in-project true
        poetry install
        sudo apt-get install graphviz

    - name: Run checks
      run: |
        source "$HOME/.poetry/env"
        export PATH="$(pwd)/.venv/bin:$PATH"
        make test

    # https://github.com/mkdocs/mkdocs/discussions/2369
    - name: Configure Git
      run: git config user.name 'github-actions[bot]' && git config user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Publish to GitHub Pages
      run: |
        source "$HOME/.poetry/env"
        export PATH="$(pwd)/.venv/bin:$PATH"
        poetry run mkdocs gh-deploy
